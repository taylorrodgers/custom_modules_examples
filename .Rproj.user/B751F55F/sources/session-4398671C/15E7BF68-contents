library(shiny)
library(shiny.semantic)
library(semantic.dashboard)
library(mongolite)
library(tidyverse)
library(XML)
library(httr)
library(ggthemes)


source("modules.R",local=TRUE)
source("functions.R",local=TRUE)
readRenviron(".Renviron") 
# Javascript for Accordion
accordion_js <- "
$(document).ready(function() {
  $('.ui.accordion').accordion();
})"

Totals <- function(data,categories,period="month",notimelabel=FALSE) {

  PeriodLabel <- ifelse(period=="year"," /yr",
                        ifelse(period=="month"," /mo",
                               "{incorrect period}"))
  PeriodDiviser <- ifelse(period=="year",1,
                           ifelse(period=="month",12,
                                  "{incorrect period}"))
  
  if (notimelabel==FALSE) {
    data %>%
      filter(Categories=="Totals",SubCategories==categories,Type=="result") %>%
      transmute(Value=round(as.numeric(Value)/PeriodDiviser,2)) %>%
      paste(.,PeriodLabel)
  }
  
  else {
    data %>%
      filter(Categories=="Totals",SubCategories==categories,Type=="result") %>%
      transmute(Value=round(as.numeric(Value)/PeriodDiviser,2)) %>%
      paste0(.)
  }
  
} 

SubTotals <- function(data,categories,period="month") {
  PeriodDiviser <- ifelse(period=="year",1,
                          ifelse(period=="month",12,
                                 "{incorrect period}"))
  data %>%
    filter(Categories==categories,Type=="result") %>%
    transmute(SubCategories,Value=round(as.numeric(Value),2)) %>%
    arrange(SubCategories) %>%
    group_by(SubCategories) %>%
    summarize(Value=sum(Value)/PeriodDiviser) %>%
    rename(Subcategories=SubCategories,Emissions=Value)
}

source("modules.R",local=TRUE)
source("functions.R",local=TRUE)
readRenviron(".Renviron") 
# Module
ledgerAccordionTotalUI <- function(id){
  #ns <- NS(id)
  tagList(
    div(class="ui grid",
        div(class="two column row",
            div(class="left floated column",textOutput(NS(id,"accordionHeader"),inline=TRUE)),
            div(class="right floated column",style="text-align: right",textOutput(NS(id,"accordionTotal"),inline=TRUE)))
    )
  )
}

ledgerAccordionSubTotalUI <- function(id){
  #ns <- NS(id)
  tagList(
    tableOutput(NS(id,"accordionSubTotal"))
  )
}

ledgerAccordionTotalServer <-function(id,data,categories,period) {
    moduleServer(id,function(input,output,session) {
      
      output$accordionHeader <- renderText({
        paste0("Total ",categories,": ")
      })
      
      output$accordionTotal <- renderText({
       Totals(data=data,categories=categories,period=period)
        
      })
      
    })
}

ledgerAccordionSubTotalServer <- function(id,data,categories,period) {
    moduleServer(id,function(input,output,session) {
      
      # notimelabel=FALSE
      # period="month"
      # categories="Travel"
      # data=data()
      output$accordionSubTotal <- renderTable(width = "100%",colnames=FALSE,{
       SubTotals(data=data,categories,period=period)
       # # period=period()
       #  PeriodLabel <- ifelse(period=="year"," /yr",
       #                        ifelse(period=="month"," /mo",
       #                               "{incorrect period}"))
       #  PeriodDiviser <- ifelse(period=="year",1,
       #                          ifelse(period=="month",12,
       #                                 "{incorrect period}"))
       #  
       #  if (notimelabel==FALSE) {
       #    data %>%
       #      filter(Categories=="Totals",SubCategories==categories,Type=="result") %>%
       #      transmute(Value=round(as.numeric(Value)/PeriodDiviser,2)) %>%
       #      paste(.,PeriodLabel)
       #  }
       #  
       #  else {
       #    data %>%
       #      #filter(Categories=="Totals",SubCategories==categories,Type=="result") %>%
       #      transmute(Value=round(as.numeric(Value)/PeriodDiviser,2)) %>%
       #      paste0(.)
       #  }
      })
      
      outputOptions(output, "accordionSubTotal", suspendWhenHidden = FALSE)
  })
}

# Main App
accordionMasterUI <- function(id,period="month") {
  tagList(
  # semanticPage(
  #   div(class="ui grid",
  #       div(class="four column row",
            # div(class="one column",
                div(class = "ui segment",style="min-width: 250px; max-width: 350px",
                    h3(ifelse(period=="year","Yearly Carbon Estimates",
                              ifelse(period=="month","Monthly Carbon Estimates","{incorrect period}"))),
                    h3(class="ui grey sub header","Total CO2 Emissions"),
                    div(class="ui grid",
                    div(class="four column row",
                        div(class="column",
                            h2(class="ui dividing header",textOutput(NS(id,"ledgerAccordionGrandTotal")),inline=TRUE)),
                        div(class="column",
                            strong(
                              ifelse(period=="year"," /year",
                                 ifelse(period=="month"," /month","{incorrect period}"))
                              )
                            )
                        )),
                    br(),
                    div(class ="ui accordion", 
                        div(class = "title active",
                            h4(class="ui dividing header",ledgerAccordionTotalUI(NS(id,"Travel")))
                        ),
                        ### Content
                        div(class = "content active",
                            div(class="ui teal inverted segment",
                                ledgerAccordionSubTotalUI(NS(id,"Travel")))
                        ),
                        div(class = "title",
                            h4(class="ui dividing header",ledgerAccordionTotalUI(NS(id,"Housing")))
                            # h1("Hello")
                        ),
                        ### Content
                        div(class = "content",
                            div(class="ui teal inverted segment",
                                ledgerAccordionSubTotalUI(NS(id,"Housing")))
                        ),
                        div(class = "title",
                            h4(class="ui dividing header",ledgerAccordionTotalUI(NS(id,"Food")))
                            # "Hel"
                        ),
                        ### Content
                        div(class = "content",
                            div(class="ui teal inverted segment",
                                ledgerAccordionSubTotalUI(NS(id,"Food")))
                        ),
                        div(class = "title",
                            h4(class="ui dividing header",ledgerAccordionTotalUI(NS(id,"Goods")))
                        ),
                        ### Content
                        div(class = "content",
                            div(class="ui teal inverted segment",
                                ledgerAccordionSubTotalUI(NS(id,"Goods")))
                        ),
                        div(class = "title",
                            h4(class="ui dividing header",ledgerAccordionTotalUI(NS(id,"Services")))
                        ),
                        ### Content
                        div(class = "content",
                            div(class="ui teal inverted segment",
                                ledgerAccordionSubTotalUI(NS(id,"Services")))
                        )
                    )
                )
    #         )
    #     )
    # )
    ,
    shiny::tags$script(accordion_js)
  )
}

accordionMasterServer <- function(id,data,period) {
  moduleServer(id,function(input,output,session) {
  
      output$ledgerAccordionGrandTotal <- renderText({
        Totals(data,categories="Grand",period=period,notimelabel=TRUE)
      })
      
      ledgerAccordionTotalServer("Travel",data=data,categories="Travel",period=period)
      ledgerAccordionTotalServer("Housing",data=data,categories="Housing",period=period)
      ledgerAccordionTotalServer("Food",data=data,categories="Food",period=period)
      ledgerAccordionTotalServer("Goods",data=data,categories="Goods",period=period)
      ledgerAccordionTotalServer("Services",data=data,categories="Services",period=period)
      ledgerAccordionSubTotalServer("Travel",data=data,categories="Travel",period=period)
      ledgerAccordionSubTotalServer("Housing",data=data,categories="Housing",period=period)
      ledgerAccordionSubTotalServer("Food",data=data,categories="Food",period=period)
      ledgerAccordionSubTotalServer("Goods",data=data,categories="Goods",period=period)
      ledgerAccordionSubTotalServer("Services",data=data,categories="Services",period=period)

      })
}
ui <- function() {
  semanticPage(
    div(class="ui stackable centered four column grid",
        div(class="column",
            accordionMasterUI("month",period="month")
            ),
        div(class="column",
           accordionMasterUI("year",period="year")
            )
        )
    )
}

server <- function(input, output, session) {

  Dat <- reactive({
    noSqlImport(con=UserEstimates,user="jmoney",tabmaps=TabMapping)
  })

  accordionMasterServer("month",data=Dat(),period="month")
  accordionMasterServer("year",data=Dat(),period="year")

}

shinyApp(ui = ui(), server = server)